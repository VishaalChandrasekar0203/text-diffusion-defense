[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "textdiff"
version = "1.0.0"
description = "Easy-to-use LLM safety middleware - embedding-based diffusion defense against adversarial text attacks"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Vishaal Chandrasekar", email = "vishaalchandrasekar0203@gmail.com"},
]
keywords = ["text", "defense", "diffusion", "security", "nlp", "adversarial", "embeddings", "llm"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Security",
    "Topic :: Text Processing",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "torch>=1.9.0",
    "numpy>=1.21.0",
    "transformers>=4.20.0",
    "sentence-transformers>=2.2.0",
    "scikit-learn>=1.0.0",
    "datasets>=2.0.0",
    "huggingface-hub>=0.16.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "torch-audio>=0.9.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "torch-audio>=0.9.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
]
gpu = [
    "torch>=1.9.0",
    "torch-audio>=0.9.0",
]

[project.urls]
Homepage = "https://github.com/VishaalChandrasekar0203/text-diffusion-defense"
Documentation = "https://text-diffusion-defense.readthedocs.io"
Repository = "https://github.com/VishaalChandrasekar0203/text-diffusion-defense"
Issues = "https://github.com/VishaalChandrasekar0203/text-diffusion-defense/issues"

[project.scripts]
text-diffusion-defense = "text_diffusion_defense.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["textdiff*"]

[tool.setuptools.package-data]
"textdiff" = ["*.json", "*.txt", "*.md"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
]

[tool.coverage.run]
source = ["textdiff"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/.*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "torch.*",
    "transformers.*",
    "sentence_transformers.*",
    "sklearn.*",
    "scikit_learn.*",
]
ignore_missing_imports = true

[tool.flake8]
max-line-length = 88
extend-ignore = [
    "E203",  # whitespace before ':'
    "W503",  # line break before binary operator
]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".venv",
    ".tox",
]
